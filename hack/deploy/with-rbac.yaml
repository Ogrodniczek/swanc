apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: swanc
  labels:
    app: swanc
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: swanc
  labels:
    app: swanc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: swanc
subjects:
- kind: ServiceAccount
  name: swanc
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: swanc
  namespace: kube-system
  labels:
    app: swanc
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: swanc
  name: swanc
  namespace: kube-system
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: swanc
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: swanc
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        # vpn controller should be able to run on masters
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule
      containers:
      - name: operator
        image: appscode/swanc:5.0.0-alpha.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 500
          name: nat1
          protocol: UDP
        - containerPort: 4500
          name: nat2
          protocol: UDP
        securityContext:
          privileged: true
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: libmodules
          mountPath: /lib/modules
        - name: modprobe
          mountPath: /sbin/modprobe
        - name: ipseckey
          mountPath: /etc/ipsec.secrets
          subPath: ipsec.secrets
          readOnly: true
        - name: ipsecconf
          mountPath: /srv/swanc
      volumes:
      - name: libmodules
        hostPath:
          path: /lib/modules
      - name: modprobe
        hostPath:
          path: /sbin/modprobe
      - name: ipseckey
        secret:
          secretName: swanc
      - name: ipsecconf
        emptyDir: {}
